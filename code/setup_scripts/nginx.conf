load_module /usr/lib/nginx/modules/ngx_stream_module.so;
worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

stream {
  upstream stream_mongo_backend {
         server 127.0.0.1:27017;
  }
  server {
        listen  27020 so_keepalive=on;
        proxy_connect_timeout 2s;
        proxy_pass    stream_mongo_backend;
        proxy_timeout 10m;
    }
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    # server 192.168.0.7:8000 fail_timeout=0;
  }

  upstream deployment_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server unix:/tmp/deployment.sock fail_timeout=0;

    # for a TCP configuration
    # server 192.168.0.7:8000 fail_timeout=0;
  }

  

  server {
    listen 80;
    server_name preprod.shoppingstories.org;
    return 301 https://preprod.shoppingstories.org$request_uri;
  }


  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD

    # root /home/admin/shoppin

    listen 443 ssl http2;
    client_max_body_size 1G;


    # set the correct host(s) for your site
    server_name 127.0.0.1 preprod.shoppingstories.org;
    # ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1;
    ssl_certificate /etc/letsencrypt/live/preprod.shoppingstories.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/preprod.shoppingstories.org/privkey.pem;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_session_cache   shared:SSL:20m;
    ssl_session_timeout 1h;
    keepalive_timeout 15;
    ssl_session_tickets on;


    # location /_next/static/ {
    #   root /home/admin/shopping-stories/website/.next/static;
    # }

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_web;
    }

    location @proxy_to_web {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_buffering on;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_pass http://localhost:3000$request_uri;
    }
  }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 4562;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name 127.0.0.1 preprod.shoppingstories.org;

    keepalive_timeout 5;

    # path for static files
    root /path/to/app/current/public;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Host $http_host;
      proxy_buffering off;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Host $http_host;
      proxy_buffering off;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /path/to/app/current/public;
    }
  }

  server {
    listen 7385;
    client_max_body_size 1m;

    server_name 127.0.0.1 preprod.shoppingstories.org;
    root /path/to/app/current/public;
    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_apps;
    }

    location @proxy_to_apps {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_buffering off;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://deployment_server$request_uri;
    }
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /path/to/app/current/public;
    }
  }

  
}
